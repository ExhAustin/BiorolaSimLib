% Visualizes the simulation results in the format generated by ode_simulation.m
% 	Note: A MATLAB version of R2014b or newer is needed to execute this function
function plot_gui(result, draw)
% Plotting variables
t_last = result.T(1);
n_frames = length(result.T);
direction = 1;
fps = 25;
terminate = false;

%======================================
% Initialize GUI
%======================================
% Create control panel figure
f = figure('Visible','off','Position',[30,100,1000,575],'Name','Movie_GUI');

% Construct the components.
play_button_group = uibuttongroup('Visible','on','Position',[.75 .3 .2 .5]);
			  
% Create three radio buttons and one push button in the button group.
forward_button = uicontrol(play_button_group,'Style','radiobutton','String','Forward',...
	'Position',[10,240,80,20],...
	'Callback',@forward_button_Callback);
stop_button = uicontrol(play_button_group,'Style','radiobutton','String','Stop',...
	'Position',[10,200,80,20]);
backward_button = uicontrol(play_button_group,'Style','radiobutton','String','Backward',...
	'Position',[10,160,80,20],...
	'Callback',@backward_button_Callback);
SaveVideo_button = uicontrol(play_button_group,'Style','pushbutton','String','Save video',...
	'Position',[10,70,100,40],...
	'Callback',@SaveVideo_button_Callback);
Exit_button = uicontrol(play_button_group,'Style','pushbutton','String','Exit',...
	'Position',[10,20,80,40],...
	'Callback',@Exit_button_Callback);

% Create text
speed_text = uicontrol('Style','text','String','Playing speed 1',...
	'Position',[360,80,150,20]);
start_t_text = uicontrol('Style','text','String',['t=',num2str(result.T(1))],'Position',[37,30,40,20]);
start_t_text = uicontrol('Style','text','String',['t=',num2str(result.T(end))],'Position',[932,30,40,20]);

% Create slider
mean_frametime = (result.T(end) - result.T(1)) / n_frames;
frame_slider = uicontrol('Style', 'slider',...
	'SliderStep',[mean_frametime,2*mean_frametime],'Min',result.T(1),'Max',result.T(end),'Value',result.T(1),...
	'Position', [50,10,900,20],...
	'Callback', @frame_slider_Callback);
speed_slider = uicontrol('Style', 'slider',...
	'SliderStep',[0.01,0.1],'Min',0,'Max',2,'Value',1,...
	'Position', [200,55,500,20],...
	'Callback', @speed_slider_Callback);

% Create plot region
r = 0.5;
ha = axes('Units','Pixels','Position',[50,150,r*1366,r*768]);

% Change units to normalized so components resize automatically.
f.Units = 'normalized';
ha.Units = 'normalized';
stop_button.Units = 'normalized';
backward_button.Units = 'normalized';
forward_button.Units = 'normalized';
SaveVideo_button.Units = 'normalized';
h_text.Units = 'normalized';
frame_slider.Units = 'normalized';
speed_text.Units = 'normalized';
speed_slider.Units = 'normalized';

% Assign the GUI a name to appear in the window title.
f.Name = 'MOVIE_GUI';

% Move the GUI to the center of the screen.
movegui(f,'center')

% Make the GUI visible.
f.Visible = 'on';

%play animation at first time open gui
frame_plot(1)

%======================================
% Plot
%======================================
Run

%======================================
% Nested functions
%======================================
function frame_plot(t)
	t_last = t;
	[dummy, i] = min(abs(t - result.T));
	frame_slider.Value = t;

	draw(result.T(i), result.X(i,:));
	title(['t=',num2str(result.T(i)),'s ; frame=',num2str(i)]);
	hold off;
end

function Run
	while 1
		drawnow

		if terminate
			close all;
			break;
		end

		if stop_button.Value==0
			t = t_last + direction*(1/fps)*speed_slider.Value;
			if (t < result.T(1)) || (t > result.T(end))
				t = result.T(1);
				stop_button.Value = 1;
			end

			frame_plot(t);
			pause(1/fps);
		end
	end
end

% callback functions
function frame_slider_Callback(source,callbackdata)
	stop_button.Value = 1;
	frame_plot(source.Value);
end

function speed_slider_Callback(source,callbackdata)
	speed_text.String=['Playing speed ',num2str(speed_slider.Value)];
end

function backward_button_Callback(source,callbackdata)
	direction=-1;
end

function forward_button_Callback(source,callbackdata)
	direction=1;
end

function SaveVideo_button_Callback(source,callbackdata)
	stop_button.Value = 1;
	terminate = true;
	close all;
	
	% Create default directory
	if exist('videos') == 0
		mkdir('videos');
	end

	% Initialize target directory
	DefaultPathName=[pwd '\videos\'];
	[filename, pathname] = uiputfile('*.mp4','Save Video',DefaultPathName);
	if isequal(filename,0) || isequal(pathname,0)
		disp('User selected Cancel');
	else
		% Get video parameters
		prompt = {'Enter video fps:', 'Enter video speed:'};
		dlg_title = 'Video parameters';
		num_lines = 1;
		defaultans = {'30','1'};
		answer = inputdlg(prompt,dlg_title,num_lines,defaultans);
		fps = str2num(answer{1});
		spd = str2num(answer{2});

		% Initialize figure
		clear FIG
		ww=[1 1 1366 768];
		FIG=figure('Visible','on','Position', ww,'Resize','off','ToolBar','none','WindowStyle','modal','Name','Movie_Save');

		writerObj = VideoWriter(fullfile(pathname,filename),'MPEG-4');
		writerObj.FrameRate = fps;
		open(writerObj);

		% Start recording
		time = 0;
		i = 1;
		while 1
			% display progress
			clc;
			disp('Generating video...');
			fprintf('Processed state frames: %d/%d\n', i, n_frames);

			% refresh figure
			hold off;

			% find next frame
			while i < n_frames && result.T(i) < time
				i = i+1;
			end

			% plot frame i
			draw(result.T(i), result.X(i,:));
			
			frame = getframe(gcf);
			writeVideo(writerObj,frame);
			
			% increase time to next frame
			time = time + spd/fps;

			% end recording if all frames are recorded
			if i >= n_frames
				break;
			end
		end

		% Close objects
		close(writerObj);
		close Movie_Save;
		disp('Done.');
		disp(['Output file: ',fullfile(pathname,filename)]);
		close all;
	end
end

function Exit_button_Callback(source,callbackdata)
	terminate = true;
end

end









